Metadata-Version: 2.4
Name: scat_lib
Version: 0.1.0
Summary: A Python library for calculating X-ray scattering from ab initio electronic structure calculations using PySCF
Author: Patrick Wang
License: MIT
Project-URL: Homepage, https://github.com/your-org/scat_lib
Project-URL: Documentation, https://scat-lib.readthedocs.io
Project-URL: Repository, https://github.com/your-org/scat_lib
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: pyscf>=2.0.0
Requires-Dist: matplotlib>=3.5.0
Requires-Dist: seaborn>=0.11.0
Requires-Dist: colorcet>=2.0.0
Requires-Dist: pyscf-forge@ git+https://github.com/pyscf/pyscf-forge
Provides-Extra: docs
Requires-Dist: sphinx>=4.0.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"

# Scattering Library
This python library combines a suite of tools used to calculate X-ray scattering from *ab initio* electronic structure calculations using PySCF.

It also allows the calculation of scattering using configuration state functions (CSF).

## Package Layout Update

As of this restructure, all PySCF-dependent scattering utilities have been grouped into the subpackage `scat_lib.pyscf_scat`:

- `scat_lib.pyscf_scat.scat_calc` (run scattering from PySCF objects and CSFs)
- `scat_lib.pyscf_scat.ci_to_2rdm` (CI/2-RDM utilities)
- `scat_lib.pyscf_scat.makerdm` and `scat_lib.pyscf_scat.rdm_tools` (RDM helpers)
- `scat_lib.pyscf_scat.reduced_ci` (reduced CASSCF with CSF tools)
- `scat_lib.pyscf_scat.molden_reader_nikola_pyscf` (PySCF molden reader)
- `scat_lib.pyscf_scat.fit_utils` (fitting/plot helpers)

For backward compatibility, thin wrappers remain at the old top-level module paths (e.g., `scat_lib.scat_calc`) that re-export from the new subpackage. New code should import from `scat_lib.pyscf_scat.*`.

## `ci_to_2rdm.py`
